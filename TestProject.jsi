
class #global extends Object {

  Transform FromString(string) (Native)

  Vector3 FromString(string) (Native)

  bool FromString(string) (Native)

  byte FromString(string) (Native)

  double FromString(string) (Native)

  float FromString(string) (Native)

  int FromString(string) (Native)

  string FromString(string) (Native)

  ulong FromString(string) (Native)

  Application GetApplication() (Native)

  bool ImGui_Begin(string) (Native)

  void ImGui_End() (Native)

  void ImGui_Text(Object) (Native)

  void ImGui_Text(string) (Native)

  bool ImGui_WantCaptureKeyboard() (Native)

  bool ImGui_WantCaptureMouse() (Native)

  void #global::Initialize() {
    [00000000]  push 8                                                                                 JingleScript::ValueItem::Push
    [00000001]   copy_address 0                                                                        
    [00000002]   call_method [ClassProperty::ctor()] 1                                                 JingleScript::Compiler::CompileFunctionCall
    [00000003]   copy_address 0                                                                        
    [00000004]   push 40                                                                               JingleScript::ValueItem::Push
    [00000005]    copy_data string [Script Test] 40                                                    JingleScript::Compiler::CompileConstant
    [00000006]    call_method [EditorAttribute::ctor(string)] 6                                        JingleScript::Compiler::CompileFunctionCall
    [00000007]   pop 40                                                                                JingleScript::ValueItem::Pop
    [00000008]   copy_address 0                                                                        
    [00000009]   push 40                                                                               JingleScript::ValueItem::Push
    [0000000A]    copy_data string [Viewport] 40                                                       JingleScript::Compiler::CompileConstant
    [0000000B]    call_method [EditorAttribute::ctor(string)] 6                                        JingleScript::Compiler::CompileFunctionCall
    [0000000C]   pop 40                                                                                JingleScript::ValueItem::Pop
    [0000000D]   copy_address 0                                                                        
    [0000000E]   push 40                                                                               JingleScript::ValueItem::Push
    [0000000F]    copy_data string [Content Browser] 40                                                JingleScript::Compiler::CompileConstant
    [00000010]    call_method [EditorAttribute::ctor(string)] 6                                        JingleScript::Compiler::CompileFunctionCall
    [00000011]   pop 40                                                                                JingleScript::ValueItem::Pop
    [00000012]   copy_address 0                                                                        
    [00000013]   push 40                                                                               JingleScript::ValueItem::Push
    [00000014]    copy_data string [Scene Hierarchy] 40                                                JingleScript::Compiler::CompileConstant
    [00000015]    call_method [EditorAttribute::ctor(string)] 6                                        JingleScript::Compiler::CompileFunctionCall
    [00000016]   pop 40                                                                                JingleScript::ValueItem::Pop
    [00000017]   copy_address 0                                                                        
    [00000018]   push 40                                                                               JingleScript::ValueItem::Push
    [00000019]    copy_data string [Entity Properties] 40                                              JingleScript::Compiler::CompileConstant
    [0000001A]    call_method [EditorAttribute::ctor(string)] 6                                        JingleScript::Compiler::CompileFunctionCall
    [0000001B]   pop 40                                                                                JingleScript::ValueItem::Pop
    [0000001C]   copy_address 0                                                                        
    [0000001D]   call_method [Property::ctor()] 1                                                      JingleScript::Compiler::CompileFunctionCall
    [0000001E]   copy_address 0                                                                        
    [0000001F]   call_method [Property::ctor()] 1                                                      JingleScript::Compiler::CompileFunctionCall
    [00000020]   copy_address 0                                                                        
    [00000021]   call_method [Property::ctor()] 1                                                      JingleScript::Compiler::CompileFunctionCall
    [00000022]   copy_address 0                                                                        
    [00000023]   call_method [Property::ctor()] 1                                                      JingleScript::Compiler::CompileFunctionCall
    [00000024]   copy_address 0                                                                        
    [00000025]   call_method [Property::ctor()] 1                                                      JingleScript::Compiler::CompileFunctionCall
    [00000026]   copy_address 0                                                                        
    [00000027]   call_method [Property::ctor()] 1                                                      JingleScript::Compiler::CompileFunctionCall
    [00000028]   copy_address 0                                                                        
    [00000029]   call_method [Property::ctor()] 1                                                      JingleScript::Compiler::CompileFunctionCall
    [0000002A]   copy_address 0                                                                        
    [0000002B]   push 1                                                                                JingleScript::ValueItem::Push
    [0000002C]    copy_data bool [1] 1                                                                 JingleScript::Compiler::CompileConstant
    [0000002D]    call_method [Property::ctor(bool)] 6                                                 JingleScript::Compiler::CompileFunctionCall
    [0000002E]   pop 1                                                                                 JingleScript::ValueItem::Pop
    [0000002F]   copy_address 0                                                                        
    [00000030]   push 1                                                                                JingleScript::ValueItem::Push
    [00000031]    copy_data bool [1] 1                                                                 JingleScript::Compiler::CompileConstant
    [00000032]    call_method [Property::ctor(bool)] 6                                                 JingleScript::Compiler::CompileFunctionCall
    [00000033]   pop 1                                                                                 JingleScript::ValueItem::Pop
    [00000034]   copy_address 0                                                                        
    [00000035]   push 1                                                                                JingleScript::ValueItem::Push
    [00000036]    copy_data bool [1] 1                                                                 JingleScript::Compiler::CompileConstant
    [00000037]    call_method [Property::ctor(bool)] 6                                                 JingleScript::Compiler::CompileFunctionCall
    [00000038]   pop 1                                                                                 JingleScript::ValueItem::Pop
    [00000039]   copy_address 0                                                                        
    [0000003A]   call_method [Property::ctor()] 1                                                      JingleScript::Compiler::CompileFunctionCall
    [0000003B]   copy_address 0                                                                        
    [0000003C]   call_method [Property::ctor()] 1                                                      JingleScript::Compiler::CompileFunctionCall
    [0000003D]   copy_address 0                                                                        
    [0000003E]   call_method [Native::ctor()] 1                                                        JingleScript::Compiler::CompileFunctionCall
    [0000003F]   copy_address 0                                                                        
    [00000040]   call_method [Native::ctor()] 1                                                        JingleScript::Compiler::CompileFunctionCall
    [00000041]   copy_address 0                                                                        
    [00000042]   call_method [Native::ctor()] 1                                                        JingleScript::Compiler::CompileFunctionCall
    [00000043]   copy_address 0                                                                        
    [00000044]   call_method [Native::ctor()] 1                                                        JingleScript::Compiler::CompileFunctionCall
    [00000045]   copy_address 0                                                                        
    [00000046]   call_method [Native::ctor()] 1                                                        JingleScript::Compiler::CompileFunctionCall
    [00000047]   copy_address 0                                                                        
    [00000048]   call_method [Native::ctor()] 1                                                        JingleScript::Compiler::CompileFunctionCall
    [00000049]   copy_address 0                                                                        
    [0000004A]   call_method [Native::ctor()] 1                                                        JingleScript::Compiler::CompileFunctionCall
    [0000004B]   copy_address 0                                                                        
    [0000004C]   call_method [Native::ctor()] 1                                                        JingleScript::Compiler::CompileFunctionCall
    [0000004D]   copy_address 0                                                                        
    [0000004E]   call_method [Native::ctor()] 1                                                        JingleScript::Compiler::CompileFunctionCall
    [0000004F]   copy_address 0                                                                        
    [00000050]   call_method [Native::ctor()] 1                                                        JingleScript::Compiler::CompileFunctionCall
    [00000051]   copy_address 0                                                                        
    [00000052]   call_method [Native::ctor()] 1                                                        JingleScript::Compiler::CompileFunctionCall
    [00000053]   copy_address 0                                                                        
    [00000054]   call_method [Native::ctor()] 1                                                        JingleScript::Compiler::CompileFunctionCall
    [00000055]   copy_address 0                                                                        
    [00000056]   call_method [Native::ctor()] 1                                                        JingleScript::Compiler::CompileFunctionCall
    [00000057]   copy_address 0                                                                        
    [00000058]   call_method [Native::ctor()] 1                                                        JingleScript::Compiler::CompileFunctionCall
    [00000059]   copy_address 0                                                                        
    [0000005A]   call_method [Native::ctor()] 1                                                        JingleScript::Compiler::CompileFunctionCall
    [0000005B]   copy_address 0                                                                        
    [0000005C]   call_method [Native::ctor()] 1                                                        JingleScript::Compiler::CompileFunctionCall
    [0000005D]   copy_address 0                                                                        
    [0000005E]   call_method [Native::ctor()] 1                                                        JingleScript::Compiler::CompileFunctionCall
    [0000005F]   copy_address 0                                                                        
    [00000060]   call_method [Native::ctor()] 1                                                        JingleScript::Compiler::CompileFunctionCall
    [00000061]   copy_address 0                                                                        
    [00000062]   call_method [Native::ctor()] 1                                                        JingleScript::Compiler::CompileFunctionCall
    [00000063]   copy_address 0                                                                        
    [00000064]   call_method [Native::ctor()] 1                                                        JingleScript::Compiler::CompileFunctionCall
    [00000065]   copy_address 0                                                                        
    [00000066]   call_method [Native::ctor()] 1                                                        JingleScript::Compiler::CompileFunctionCall
    [00000067]   copy_address 0                                                                        
    [00000068]   call_method [Native::ctor()] 1                                                        JingleScript::Compiler::CompileFunctionCall
    [00000069]   copy_address 0                                                                        
    [0000006A]   call_method [Native::ctor()] 1                                                        JingleScript::Compiler::CompileFunctionCall
    [0000006B]   copy_address 0                                                                        
    [0000006C]   call_method [Native::ctor()] 1                                                        JingleScript::Compiler::CompileFunctionCall
    [0000006D]   copy_address 0                                                                        
    [0000006E]   call_method [Native::ctor()] 1                                                        JingleScript::Compiler::CompileFunctionCall
    [0000006F]  pop 8                                                                                  JingleScript::ValueItem::Pop
  }

  #global::ctor() (Native)

  #global::dtor() (Native)
}

class Application extends Object {
   int FPS

  Entity Application::GetScene() (Native)

  void Application::OnUpdate(double) {
  }

  Application::ctor() (Native)

  Application::dtor() (Native)
}

class Array extends Object {

  Array::ctor() (Native)

  Array::dtor() (Native)
}

class Asset extends Object {

  Asset::ctor() (Native)

  Asset::dtor() (Native)
}

class AssetModule extends Module {

  AssetModule::ctor() (Native)

  AssetModule::dtor() (Native)
}

class Attribute extends Object {

  Attribute::ctor() (Native)

  Attribute::dtor() (Native)
}

class BindingModule extends Module {

  BindingModule::ctor() (Native)

  BindingModule::dtor() (Native)
}

class Camera extends Entity {
   double MouseSpeed
   double MovementBoostModifier
   double MovementSpeed
}

class ClassProperty extends Attribute {

  ClassProperty::ctor() (Native)

  ClassProperty::dtor() (Native)
}

class Component extends Object {

  void Component::Editor_OnPropertyChanged(string) (Native)

  void Component::OnCreate() (Native)

  void Component::OnDestroy() (Native)

  void Component::OnTick(double) (Native)

  Component::ctor() (Native)

  Component::ctor(Entity) (Native)

  Component::dtor() (Native)
}

class ComponentArray extends Array {

  void ComponentArray::Clear() (Native)

  int ComponentArray::Count() (Native)

  Component ComponentArray::Get(int) (Native)

  string ComponentArray::GetDataType() (Native)

  void ComponentArray::Insert(Component) (Native)

  void ComponentArray::Remove(int) (Native)

  void ComponentArray::Reserve(int) (Native)

  void ComponentArray::Resize(int) (Native)

  ComponentArray::ctor() (Native)

  ComponentArray::dtor() (Native)
}

class Config extends Managed {

  Config::ctor() (Native)

  Config::dtor() (Native)
}

class ConfigArray extends Object {

  ConfigArray::ctor() (Native)

  ConfigArray::dtor() (Native)
}

class ConfigAsset extends Asset {

  ConfigAsset::ctor() (Native)

  ConfigAsset::dtor() (Native)
}

class ConfigSection extends Config {

  ConfigSection::ctor() (Native)

  ConfigSection::dtor() (Native)
}

class ConfigValue extends Config {

  ConfigValue::ctor() (Native)

  ConfigValue::dtor() (Native)
}

class ContentBrowserPanel extends EditorPanelBase {

  ContentBrowserPanel::ctor() (Native)

  ContentBrowserPanel::dtor() (Native)
}

class Debug extends Object {
}

class DebugType extends Object {
}

class EditorAttribute extends Attribute {
   string m_Title

  EditorAttribute::ctor(string) (Native)

  EditorAttribute::dtor() (Native)
}

class EditorModule extends Module {

  EditorModule::ctor() (Native)

  EditorModule::dtor() (Native)
}

class EditorPanelBase extends Object {

  void EditorPanelBase::Close() (Native)

  EditorModule EditorPanelBase::GetEditor() (Native)

  void EditorPanelBase::OnBeginRender(double) (Native)

  void EditorPanelBase::OnEndRender(double) (Native)

  void EditorPanelBase::OnRender(double) (Native)

  EditorPanelBase::ctor() (Native)

  EditorPanelBase::dtor() (Native)
}

class EditorViewport extends Viewport {

  EditorViewport::ctor() (Native)

  EditorViewport::dtor() (Native)
}

class EditorViewportPanel extends EditorPanelBase {

  EditorViewportPanel::ctor() (Native)

  EditorViewportPanel::dtor() (Native)
}

class Entity extends Object {
   EntityArray Children
   ComponentArray Components
   Transform Transform

  void Entity::AddChild(Entity) (Native)

  void Entity::Editor_OnPropertyChanged(string) (Native)

  void Entity::Editor_OnRenderChildren() (Native)

  void Entity::Editor_OnRenderComponents() (Native)

  void Entity::Editor_OnRenderTransform() (Native)

  Entity Entity::GetParent() (Native)

  void Entity::OnCreate() (Native)

  void Entity::OnDeserializeChildren(Config) (Native)

  void Entity::OnDeserializeComponents(Config) (Native)

  void Entity::OnDeserializeTransform(Config) (Native)

  void Entity::OnDestroy() (Native)

  void Entity::OnSerializeChildren(Config) (Native)

  void Entity::OnSerializeComponents(Config) (Native)

  void Entity::OnSerializeTransform(Config) (Native)

  void Entity::OnTick(double) (Native)

  void Entity::RemoveChild(Entity) (Native)

  Entity::ctor() (Native)

  Entity::dtor() (Native)
}

class EntityArray extends Array {

  void EntityArray::Clear() (Native)

  int EntityArray::Count() (Native)

  Entity EntityArray::Get(int) (Native)

  string EntityArray::GetDataType() (Native)

  void EntityArray::Insert(Entity) (Native)

  void EntityArray::Remove(int) (Native)

  void EntityArray::Reserve(int) (Native)

  void EntityArray::Resize(int) (Native)

  EntityArray::ctor() (Native)

  EntityArray::dtor() (Native)
}

class EntityPropertiesPanel extends EditorPanelBase {

  EntityPropertiesPanel::ctor() (Native)

  EntityPropertiesPanel::dtor() (Native)
}

class Framebuffer extends Managed {

  Framebuffer::ctor() (Native)

  Framebuffer::dtor() (Native)
}

class Image extends Asset {

  Image::ctor() (Native)

  Image::dtor() (Native)
}

class Managed extends Object {

  Managed::ctor() (Native)

  Managed::dtor() (Native)
}

class Material extends ConfigAsset {
   MaterialImageArray Images
   Shader Shader

  Material::ctor() (Native)

  Material::dtor() (Native)
}

class MaterialImage extends Object {
   Image File
   string Name

  MaterialImage::ctor() (Native)

  MaterialImage::dtor() (Native)
}

class MaterialImageArray extends Array {

  void MaterialImageArray::Clear() (Native)

  int MaterialImageArray::Count() (Native)

  MaterialImage MaterialImageArray::Get(int) (Native)

  string MaterialImageArray::GetDataType() (Native)

  void MaterialImageArray::Insert(MaterialImage) (Native)

  void MaterialImageArray::Remove(int) (Native)

  void MaterialImageArray::Reserve(int) (Native)

  void MaterialImageArray::Resize(int) (Native)

  MaterialImageArray::ctor() (Native)

  MaterialImageArray::dtor() (Native)
}

class Mesh extends Asset {

  Mesh::ctor() (Native)

  Mesh::dtor() (Native)
}

class MeshComponent extends Component {
   Material MaterialOverride
   Mesh Model

  MeshComponent::ctor() (Native)

  MeshComponent::ctor(Entity) (Native)

  MeshComponent::dtor() (Native)
}

class Module extends Object {

  Module::ctor() (Native)

  Module::dtor() (Native)
}

class Native extends Attribute {

  Native::ctor() {
    [00000000]  push 8                                                                                 JingleScript::ValueItem::Push
    [00000001]   copy 8 16 [this] 8                                                                    JingleScript::Compiler::CompileFunctionCall
    [00000002]   call_exact [Attribute::ctor()]                                                        JingleScript::Compiler::CompileFunctionCall
    [00000003]  pop 8                                                                                  JingleScript::ValueItem::Pop
  }
}

class Object {

  Type Object::GetType() (Native)

  string Object::ToString() (Native)

  Object::ctor() (Native)

  Object::dtor() (Native)

  bool Object::operator!=(Object) (Native)

  bool Object::operator==(Object) (Native)
}

class Property extends Attribute {

  Property::ctor() (Native)

  Property::ctor(bool) (Native)

  Property::dtor() (Native)
}

class Renderer extends Module {

  Renderer::ctor() (Native)

  Renderer::dtor() (Native)
}

class SceneHierarchyPanel extends EditorPanelBase {

  SceneHierarchyPanel::ctor() (Native)

  SceneHierarchyPanel::dtor() (Native)
}

class ScriptTestPanel extends EditorPanelBase {

  void ScriptTestPanel::OnRender(double) {
    [00000000]  push 8                                                                                 JingleScript::ValueItem::Push
    [00000001]   push 8                                                                                JingleScript::ValueItem::PushAfter
    [00000002]    push 8                                                                               JingleScript::ValueItem::PushAt
    [00000003]     call_function [Application GetApplication()]                                        JingleScript::Compiler::CompileFunctionCall
    [00000004]     copy 8 8 24 [app]                                                                   JingleScript::Compiler::CompileVariableScope
    [00000005]    pop 8                                                                                JingleScript::ValueItem::Pop
    [00000006]    push 40                                                                              JingleScript::ValueItem::Push
    [00000007]     copy_data string [This is jingle script] 40                                         JingleScript::Compiler::CompileConstant
    [00000008]     call_function [void ImGui_Text(string)]                                             JingleScript::Compiler::CompileFunctionCall
    [00000009]    pop 40                                                                               JingleScript::ValueItem::Pop
    [0000000A]    push 40                                                                              JingleScript::ValueItem::Push
    [0000000B]     copy_data string [DeltaTime: ] 40                                                   JingleScript::Compiler::CompileConstant
    [0000000C]     push 8                                                                              JingleScript::ValueItem::PushAfter
    [0000000D]      copy 8 72 [DeltaTime] 8                                                            JingleScript::Compiler::CompileValue
    [0000000E]      call_exact [string string::operator+(double)]                                      JingleScript::HandleArithmeticOperator
    [0000000F]     pop 8                                                                               JingleScript::ValueItem::Pop
    [00000010]     call_function [void ImGui_Text(string)]                                             JingleScript::Compiler::CompileFunctionCall
    [00000011]    pop 40                                                                               JingleScript::ValueItem::Pop
    [00000012]    push 40                                                                              JingleScript::ValueItem::Push
    [00000013]     copy_data string [FPS: ] 40                                                         JingleScript::Compiler::CompileConstant
    [00000014]     push 8                                                                              JingleScript::ValueItem::PushAfter
    [00000015]      copy 8 64 [app] 8                                                                  JingleScript::Compiler::CompileValue
    [00000016]      copy_variable_from_object 8 32 [FPS] 8                                             JingleScript::Compiler::CompileValue
    [00000017]      resize -4                                                                          JingleScript::ValueItem::Resize
    [00000018]      call_exact [string string::operator+(int)]                                         JingleScript::HandleArithmeticOperator
    [00000019]     pop 4                                                                               JingleScript::ValueItem::Pop
    [0000001A]     call_function [void ImGui_Text(string)]                                             JingleScript::Compiler::CompileFunctionCall
    [0000001B]    pop 40                                                                               JingleScript::ValueItem::Pop
    [0000001C]    push 1                                                                               JingleScript::ValueItem::Push
    [0000001D]     push 1                                                                              JingleScript::ValueItem::PushAfter
    [0000001E]      push 1                                                                             JingleScript::ValueItem::PushAt
    [0000001F]       call_function [bool ImGui_WantCaptureKeyboard()]                                  JingleScript::Compiler::CompileFunctionCall
    [00000020]       copy 1 1 3 [b1]                                                                   JingleScript::Compiler::CompileVariableScope
    [00000021]       destructor [bool]                                                                 JingleScript::ValueItem::Pop
    [00000022]      pop 1                                                                              JingleScript::ValueItem::Pop
    [00000023]      push 1                                                                             JingleScript::ValueItem::Push
    [00000024]       push 1                                                                            JingleScript::ValueItem::PushAfter
    [00000025]        push 1                                                                           JingleScript::ValueItem::PushAt
    [00000026]         call_function [bool ImGui_WantCaptureMouse()]                                   JingleScript::Compiler::CompileFunctionCall
    [00000027]         copy 1 1 3 [b2]                                                                 JingleScript::Compiler::CompileVariableScope
    [00000028]         destructor [bool]                                                               JingleScript::ValueItem::Pop
    [00000029]        pop 1                                                                            JingleScript::ValueItem::Pop
    [0000002A]        push 40                                                                          JingleScript::ValueItem::Push
    [0000002B]         copy_data string [WantCaptureKeyboard: ] 40                                     JingleScript::Compiler::CompileConstant
    [0000002C]         push 1                                                                          JingleScript::ValueItem::PushAfter
    [0000002D]          copy 1 45 [b1] 1                                                               JingleScript::Compiler::CompileValue
    [0000002E]          call_exact [string string::operator+(bool)]                                    JingleScript::HandleArithmeticOperator
    [0000002F]         pop 1                                                                           JingleScript::ValueItem::Pop
    [00000030]         call_function [void ImGui_Text(string)]                                         JingleScript::Compiler::CompileFunctionCall
    [00000031]        pop 40                                                                           JingleScript::ValueItem::Pop
    [00000032]        push 40                                                                          JingleScript::ValueItem::Push
    [00000033]         copy_data string [WantCaptureMouse: ] 40                                        JingleScript::Compiler::CompileConstant
    [00000034]         push 1                                                                          JingleScript::ValueItem::PushAfter
    [00000035]          copy 1 43 [b2] 1                                                               JingleScript::Compiler::CompileValue
    [00000036]          call_exact [string string::operator+(bool)]                                    JingleScript::HandleArithmeticOperator
    [00000037]         pop 1                                                                           JingleScript::ValueItem::Pop
    [00000038]         call_function [void ImGui_Text(string)]                                         JingleScript::Compiler::CompileFunctionCall
    [00000039]        pop 40                                                                           JingleScript::ValueItem::Pop
    [0000003A]        destructor [bool]                                                                JingleScript::ValueItem::Pop
    [0000003B]       pop 1                                                                             JingleScript::ValueItem::Pop
    [0000003C]       destructor [bool]                                                                 JingleScript::ValueItem::Pop
    [0000003D]      pop 1                                                                              JingleScript::ValueItem::Pop
    [0000003E]      destructor [bool]                                                                  JingleScript::ValueItem::Pop
    [0000003F]     pop 1                                                                               JingleScript::ValueItem::Pop
    [00000040]     destructor [bool]                                                                   JingleScript::ValueItem::Pop
    [00000041]    pop 1                                                                                JingleScript::ValueItem::Pop
    [00000042]   pop 8                                                                                 JingleScript::ValueItem::Pop
    [00000043]  pop 8                                                                                  JingleScript::ValueItem::Pop
  }
}

class Shader extends Asset {

  Shader::ctor() (Native)

  Shader::dtor() (Native)
}

class TestModule extends Module {

  TestModule::ctor() (Native)

  TestModule::dtor() (Native)
}

class Texture extends Managed {

  Texture::ctor() (Native)

  Texture::dtor() (Native)
}

struct Transform {

  string Transform::ToString() (Native)

  Transform::ctor() (Native)

  Transform::dtor() (Native)
}

class Type extends Object {

  bool Type::IsInherited(Type) (Native)
}

struct Vector3 {

  string Vector3::ToString() (Native)

  Vector3::ctor() (Native)

  Vector3::dtor() (Native)
}

struct Vertex {

  Vertex::dtor() (Native)
}

class Viewport extends Managed {

  Viewport::ctor() (Native)

  Viewport::dtor() (Native)
}

class Window extends Module {

  Window::dtor() (Native)
}

class WndWindow extends Window {

  WndWindow::ctor() (Native)

  WndWindow::dtor() (Native)
}

struct bool extends Object {
   bool value

  string bool::ToString() (Native)

  bool::ctor() (Native)

  bool::dtor() (Native)

  bool bool::operator!=(bool) (Native)

  bool bool::operator!=(byte) (Native)

  bool bool::operator!=(double) (Native)

  bool bool::operator!=(float) (Native)

  bool bool::operator!=(int) (Native)

  bool bool::operator!=(ulong) (Native)

  string bool::operator+(string) (Native)

  bool bool::operator<(bool) (Native)

  bool bool::operator<(byte) (Native)

  bool bool::operator<(double) (Native)

  bool bool::operator<(float) (Native)

  bool bool::operator<(int) (Native)

  bool bool::operator<(ulong) (Native)

  bool bool::operator<=(bool) (Native)

  bool bool::operator<=(byte) (Native)

  bool bool::operator<=(double) (Native)

  bool bool::operator<=(float) (Native)

  bool bool::operator<=(int) (Native)

  bool bool::operator<=(ulong) (Native)

  void bool::operator=(bool) (Native)

  void bool::operator=(byte) (Native)

  void bool::operator=(double) (Native)

  void bool::operator=(float) (Native)

  void bool::operator=(int) (Native)

  void bool::operator=(ulong) (Native)

  bool bool::operator==(bool) (Native)

  bool bool::operator==(byte) (Native)

  bool bool::operator==(double) (Native)

  bool bool::operator==(float) (Native)

  bool bool::operator==(int) (Native)

  bool bool::operator==(ulong) (Native)

  bool bool::operator>(bool) (Native)

  bool bool::operator>(byte) (Native)

  bool bool::operator>(double) (Native)

  bool bool::operator>(float) (Native)

  bool bool::operator>(int) (Native)

  bool bool::operator>(ulong) (Native)

  bool bool::operator>=(bool) (Native)

  bool bool::operator>=(byte) (Native)

  bool bool::operator>=(double) (Native)

  bool bool::operator>=(float) (Native)

  bool bool::operator>=(int) (Native)

  bool bool::operator>=(ulong) (Native)
}

struct byte extends Object {
   byte value

  string byte::ToString() (Native)

  byte::ctor() (Native)

  byte::dtor() (Native)

  bool byte::operator!=(bool) (Native)

  bool byte::operator!=(byte) (Native)

  bool byte::operator!=(double) (Native)

  bool byte::operator!=(float) (Native)

  bool byte::operator!=(int) (Native)

  bool byte::operator!=(ulong) (Native)

  byte byte::operator%(byte) (Native)

  byte byte::operator%(int) (Native)

  byte byte::operator%(ulong) (Native)

  byte byte::operator*(byte) (Native)

  byte byte::operator*(double) (Native)

  byte byte::operator*(float) (Native)

  byte byte::operator*(int) (Native)

  byte byte::operator*(ulong) (Native)

  byte byte::operator+(byte) (Native)

  byte byte::operator+(double) (Native)

  byte byte::operator+(float) (Native)

  byte byte::operator+(int) (Native)

  byte byte::operator+(ulong) (Native)

  string byte::operator+(string) (Native)

  byte byte::operator-(byte) (Native)

  byte byte::operator-(double) (Native)

  byte byte::operator-(float) (Native)

  byte byte::operator-(int) (Native)

  byte byte::operator-(ulong) (Native)

  byte byte::operator/(byte) (Native)

  byte byte::operator/(double) (Native)

  byte byte::operator/(float) (Native)

  byte byte::operator/(int) (Native)

  byte byte::operator/(ulong) (Native)

  bool byte::operator<(bool) (Native)

  bool byte::operator<(byte) (Native)

  bool byte::operator<(double) (Native)

  bool byte::operator<(float) (Native)

  bool byte::operator<(int) (Native)

  bool byte::operator<(ulong) (Native)

  bool byte::operator<=(bool) (Native)

  bool byte::operator<=(byte) (Native)

  bool byte::operator<=(double) (Native)

  bool byte::operator<=(float) (Native)

  bool byte::operator<=(int) (Native)

  bool byte::operator<=(ulong) (Native)

  void byte::operator=(bool) (Native)

  void byte::operator=(byte) (Native)

  void byte::operator=(double) (Native)

  void byte::operator=(float) (Native)

  void byte::operator=(int) (Native)

  void byte::operator=(ulong) (Native)

  bool byte::operator==(bool) (Native)

  bool byte::operator==(byte) (Native)

  bool byte::operator==(double) (Native)

  bool byte::operator==(float) (Native)

  bool byte::operator==(int) (Native)

  bool byte::operator==(ulong) (Native)

  bool byte::operator>(bool) (Native)

  bool byte::operator>(byte) (Native)

  bool byte::operator>(double) (Native)

  bool byte::operator>(float) (Native)

  bool byte::operator>(int) (Native)

  bool byte::operator>(ulong) (Native)

  bool byte::operator>=(bool) (Native)

  bool byte::operator>=(byte) (Native)

  bool byte::operator>=(double) (Native)

  bool byte::operator>=(float) (Native)

  bool byte::operator>=(int) (Native)

  bool byte::operator>=(ulong) (Native)
}

struct double extends Object {
   double value

  string double::ToString() (Native)

  double::ctor() (Native)

  double::dtor() (Native)

  bool double::operator!=(bool) (Native)

  bool double::operator!=(byte) (Native)

  bool double::operator!=(double) (Native)

  bool double::operator!=(float) (Native)

  bool double::operator!=(int) (Native)

  bool double::operator!=(ulong) (Native)

  double double::operator*(byte) (Native)

  double double::operator*(double) (Native)

  double double::operator*(float) (Native)

  double double::operator*(int) (Native)

  double double::operator*(ulong) (Native)

  double double::operator+(byte) (Native)

  double double::operator+(double) (Native)

  double double::operator+(float) (Native)

  double double::operator+(int) (Native)

  double double::operator+(ulong) (Native)

  string double::operator+(string) (Native)

  double double::operator-(byte) (Native)

  double double::operator-(double) (Native)

  double double::operator-(float) (Native)

  double double::operator-(int) (Native)

  double double::operator-(ulong) (Native)

  double double::operator/(byte) (Native)

  double double::operator/(double) (Native)

  double double::operator/(float) (Native)

  double double::operator/(int) (Native)

  double double::operator/(ulong) (Native)

  bool double::operator<(bool) (Native)

  bool double::operator<(byte) (Native)

  bool double::operator<(double) (Native)

  bool double::operator<(float) (Native)

  bool double::operator<(int) (Native)

  bool double::operator<(ulong) (Native)

  bool double::operator<=(bool) (Native)

  bool double::operator<=(byte) (Native)

  bool double::operator<=(double) (Native)

  bool double::operator<=(float) (Native)

  bool double::operator<=(int) (Native)

  bool double::operator<=(ulong) (Native)

  void double::operator=(bool) (Native)

  void double::operator=(byte) (Native)

  void double::operator=(double) (Native)

  void double::operator=(float) (Native)

  void double::operator=(int) (Native)

  void double::operator=(ulong) (Native)

  bool double::operator==(bool) (Native)

  bool double::operator==(byte) (Native)

  bool double::operator==(double) (Native)

  bool double::operator==(float) (Native)

  bool double::operator==(int) (Native)

  bool double::operator==(ulong) (Native)

  bool double::operator>(bool) (Native)

  bool double::operator>(byte) (Native)

  bool double::operator>(double) (Native)

  bool double::operator>(float) (Native)

  bool double::operator>(int) (Native)

  bool double::operator>(ulong) (Native)

  bool double::operator>=(bool) (Native)

  bool double::operator>=(byte) (Native)

  bool double::operator>=(double) (Native)

  bool double::operator>=(float) (Native)

  bool double::operator>=(int) (Native)

  bool double::operator>=(ulong) (Native)
}

struct float extends Object {
   float value

  string float::ToString() (Native)

  float::ctor() (Native)

  float::dtor() (Native)

  bool float::operator!=(bool) (Native)

  bool float::operator!=(byte) (Native)

  bool float::operator!=(double) (Native)

  bool float::operator!=(float) (Native)

  bool float::operator!=(int) (Native)

  bool float::operator!=(ulong) (Native)

  float float::operator*(byte) (Native)

  float float::operator*(double) (Native)

  float float::operator*(float) (Native)

  float float::operator*(int) (Native)

  float float::operator*(ulong) (Native)

  float float::operator+(byte) (Native)

  float float::operator+(double) (Native)

  float float::operator+(float) (Native)

  float float::operator+(int) (Native)

  float float::operator+(ulong) (Native)

  string float::operator+(string) (Native)

  float float::operator-(byte) (Native)

  float float::operator-(double) (Native)

  float float::operator-(float) (Native)

  float float::operator-(int) (Native)

  float float::operator-(ulong) (Native)

  float float::operator/(byte) (Native)

  float float::operator/(double) (Native)

  float float::operator/(float) (Native)

  float float::operator/(int) (Native)

  float float::operator/(ulong) (Native)

  bool float::operator<(bool) (Native)

  bool float::operator<(byte) (Native)

  bool float::operator<(double) (Native)

  bool float::operator<(float) (Native)

  bool float::operator<(int) (Native)

  bool float::operator<(ulong) (Native)

  bool float::operator<=(bool) (Native)

  bool float::operator<=(byte) (Native)

  bool float::operator<=(double) (Native)

  bool float::operator<=(float) (Native)

  bool float::operator<=(int) (Native)

  bool float::operator<=(ulong) (Native)

  void float::operator=(bool) (Native)

  void float::operator=(byte) (Native)

  void float::operator=(double) (Native)

  void float::operator=(float) (Native)

  void float::operator=(int) (Native)

  void float::operator=(ulong) (Native)

  bool float::operator==(bool) (Native)

  bool float::operator==(byte) (Native)

  bool float::operator==(double) (Native)

  bool float::operator==(float) (Native)

  bool float::operator==(int) (Native)

  bool float::operator==(ulong) (Native)

  bool float::operator>(bool) (Native)

  bool float::operator>(byte) (Native)

  bool float::operator>(double) (Native)

  bool float::operator>(float) (Native)

  bool float::operator>(int) (Native)

  bool float::operator>(ulong) (Native)

  bool float::operator>=(bool) (Native)

  bool float::operator>=(byte) (Native)

  bool float::operator>=(double) (Native)

  bool float::operator>=(float) (Native)

  bool float::operator>=(int) (Native)

  bool float::operator>=(ulong) (Native)
}

struct int extends Object {
   int value

  string int::ToString() (Native)

  int::ctor() (Native)

  int::dtor() (Native)

  bool int::operator!=(bool) (Native)

  bool int::operator!=(byte) (Native)

  bool int::operator!=(double) (Native)

  bool int::operator!=(float) (Native)

  bool int::operator!=(int) (Native)

  bool int::operator!=(ulong) (Native)

  int int::operator%(byte) (Native)

  int int::operator%(int) (Native)

  int int::operator%(ulong) (Native)

  int int::operator*(byte) (Native)

  int int::operator*(double) (Native)

  int int::operator*(float) (Native)

  int int::operator*(int) (Native)

  int int::operator*(ulong) (Native)

  int int::operator+(byte) (Native)

  int int::operator+(double) (Native)

  int int::operator+(float) (Native)

  int int::operator+(int) (Native)

  int int::operator+(ulong) (Native)

  string int::operator+(string) (Native)

  int int::operator-(byte) (Native)

  int int::operator-(double) (Native)

  int int::operator-(float) (Native)

  int int::operator-(int) (Native)

  int int::operator-(ulong) (Native)

  int int::operator/(byte) (Native)

  int int::operator/(double) (Native)

  int int::operator/(float) (Native)

  int int::operator/(int) (Native)

  int int::operator/(ulong) (Native)

  bool int::operator<(bool) (Native)

  bool int::operator<(byte) (Native)

  bool int::operator<(double) (Native)

  bool int::operator<(float) (Native)

  bool int::operator<(int) (Native)

  bool int::operator<(ulong) (Native)

  bool int::operator<=(bool) (Native)

  bool int::operator<=(byte) (Native)

  bool int::operator<=(double) (Native)

  bool int::operator<=(float) (Native)

  bool int::operator<=(int) (Native)

  bool int::operator<=(ulong) (Native)

  void int::operator=(bool) (Native)

  void int::operator=(byte) (Native)

  void int::operator=(double) (Native)

  void int::operator=(float) (Native)

  void int::operator=(int) (Native)

  void int::operator=(ulong) (Native)

  bool int::operator==(bool) (Native)

  bool int::operator==(byte) (Native)

  bool int::operator==(double) (Native)

  bool int::operator==(float) (Native)

  bool int::operator==(int) (Native)

  bool int::operator==(ulong) (Native)

  bool int::operator>(bool) (Native)

  bool int::operator>(byte) (Native)

  bool int::operator>(double) (Native)

  bool int::operator>(float) (Native)

  bool int::operator>(int) (Native)

  bool int::operator>(ulong) (Native)

  bool int::operator>=(bool) (Native)

  bool int::operator>=(byte) (Native)

  bool int::operator>=(double) (Native)

  bool int::operator>=(float) (Native)

  bool int::operator>=(int) (Native)

  bool int::operator>=(ulong) (Native)
}

struct null extends Object {

  null::ctor() (Native)

  null::dtor() (Native)

  bool null::operator!=(Object) (Native)

  bool null::operator==(Object) (Native)
}

struct string extends Object {

  string string::ToString() (Native)

  string::ctor() (Native)

  string::dtor() (Native)

  bool string::operator!=(string) (Native)

  string string::operator+(bool) (Native)

  string string::operator+(byte) (Native)

  string string::operator+(double) (Native)

  string string::operator+(float) (Native)

  string string::operator+(int) (Native)

  string string::operator+(string) (Native)

  bool string::operator<(string) (Native)

  bool string::operator<=(string) (Native)

  void string::operator=(string) (Native)

  bool string::operator==(string) (Native)

  bool string::operator>(string) (Native)

  bool string::operator>=(string) (Native)
}

struct ulong {
   ulong value

  string ulong::ToString() (Native)

  ulong::ctor() (Native)

  ulong::dtor() (Native)

  bool ulong::operator!=(bool) (Native)

  bool ulong::operator!=(byte) (Native)

  bool ulong::operator!=(double) (Native)

  bool ulong::operator!=(float) (Native)

  bool ulong::operator!=(int) (Native)

  bool ulong::operator!=(ulong) (Native)

  ulong ulong::operator%(byte) (Native)

  ulong ulong::operator%(int) (Native)

  ulong ulong::operator%(ulong) (Native)

  ulong ulong::operator*(byte) (Native)

  ulong ulong::operator*(double) (Native)

  ulong ulong::operator*(float) (Native)

  ulong ulong::operator*(int) (Native)

  ulong ulong::operator*(ulong) (Native)

  string ulong::operator+(string) (Native)

  ulong ulong::operator+(byte) (Native)

  ulong ulong::operator+(double) (Native)

  ulong ulong::operator+(float) (Native)

  ulong ulong::operator+(int) (Native)

  ulong ulong::operator+(ulong) (Native)

  ulong ulong::operator-(byte) (Native)

  ulong ulong::operator-(double) (Native)

  ulong ulong::operator-(float) (Native)

  ulong ulong::operator-(int) (Native)

  ulong ulong::operator-(ulong) (Native)

  ulong ulong::operator/(byte) (Native)

  ulong ulong::operator/(double) (Native)

  ulong ulong::operator/(float) (Native)

  ulong ulong::operator/(int) (Native)

  ulong ulong::operator/(ulong) (Native)

  bool ulong::operator<(bool) (Native)

  bool ulong::operator<(byte) (Native)

  bool ulong::operator<(double) (Native)

  bool ulong::operator<(float) (Native)

  bool ulong::operator<(int) (Native)

  bool ulong::operator<(ulong) (Native)

  bool ulong::operator<=(bool) (Native)

  bool ulong::operator<=(byte) (Native)

  bool ulong::operator<=(double) (Native)

  bool ulong::operator<=(float) (Native)

  bool ulong::operator<=(int) (Native)

  bool ulong::operator<=(ulong) (Native)

  void ulong::operator=(bool) (Native)

  void ulong::operator=(byte) (Native)

  void ulong::operator=(double) (Native)

  void ulong::operator=(float) (Native)

  void ulong::operator=(int) (Native)

  void ulong::operator=(ulong) (Native)

  bool ulong::operator==(bool) (Native)

  bool ulong::operator==(byte) (Native)

  bool ulong::operator==(double) (Native)

  bool ulong::operator==(float) (Native)

  bool ulong::operator==(int) (Native)

  bool ulong::operator==(ulong) (Native)

  bool ulong::operator>(bool) (Native)

  bool ulong::operator>(byte) (Native)

  bool ulong::operator>(double) (Native)

  bool ulong::operator>(float) (Native)

  bool ulong::operator>(int) (Native)

  bool ulong::operator>(ulong) (Native)

  bool ulong::operator>=(bool) (Native)

  bool ulong::operator>=(byte) (Native)

  bool ulong::operator>=(double) (Native)

  bool ulong::operator>=(float) (Native)

  bool ulong::operator>=(int) (Native)

  bool ulong::operator>=(ulong) (Native)
}
