
class TestModule extends Module {

  TestModule::dtor() (Native)

  TestModule::ctor() (Native)
}

class Module extends Object {

  Module::dtor() (Native)

  Module::ctor() (Native)
}

class Object {

  Object::dtor() (Native)

  Object::ctor() (Native)

  string Object::ToString() (Native)

  Type Object::GetType() (Native)

  bool Object::operator==(Object) (Native)

  bool Object::operator!=(Object) (Native)
}

struct string extends Object {

  string string::operator+(int) (Native)

  string::dtor() (Native)

  bool string::operator<=(string) (Native)

  string::ctor() (Native)

  string string::ToString() (Native)

  string string::operator+(float) (Native)

  string string::operator+(bool) (Native)

  string string::operator+(byte) (Native)

  string string::operator+(double) (Native)

  string string::operator+(string) (Native)

  void string::operator=(string) (Native)

  bool string::operator>(string) (Native)

  bool string::operator>=(string) (Native)

  bool string::operator<(string) (Native)

  bool string::operator==(string) (Native)

  bool string::operator!=(string) (Native)
}

class #global extends Object {

  float FromString(string) (Native)

  bool FromString(string) (Native)

  #global::dtor() (Native)

  Application GetApplication() (Native)

  double FromString(string) (Native)

  string FromString(string) (Native)

  #global::ctor() (Native)

  byte FromString(string) (Native)

  int FromString(string) (Native)

  uint64_t FromString(string) (Native)

  bool ImGui_Begin(string) (Native)

  void ImGui_End() (Native)

  bool ImGui_WantCaptureKeyboard() (Native)

  bool ImGui_WantCaptureMouse() (Native)

  void ImGui_Text(string) (Native)

  void ImGui_Text(Object) (Native)

  void #global::Initialize() {
    [00000000]  push 8                                                                                 JingleScript::ValueItem::Push
    [00000001]   copy_address 0                                                                        
    [00000002]   push 40                                                                               JingleScript::ValueItem::Push
    [00000003]    copy_data string [Script Test] 40                                                    JingleScript::Compiler::CompileConstant
    [00000004]    call_method [EditorAttribute::ctor(string)] 6                                        JingleScript::Compiler::CompileFunctionCall
    [00000005]   pop 40                                                                                JingleScript::ValueItem::Pop
    [00000006]   copy_address 0                                                                        
    [00000007]   push 40                                                                               JingleScript::ValueItem::Push
    [00000008]    copy_data string [Viewport] 40                                                       JingleScript::Compiler::CompileConstant
    [00000009]    call_method [EditorAttribute::ctor(string)] 6                                        JingleScript::Compiler::CompileFunctionCall
    [0000000A]   pop 40                                                                                JingleScript::ValueItem::Pop
    [0000000B]   copy_address 0                                                                        
    [0000000C]   push 40                                                                               JingleScript::ValueItem::Push
    [0000000D]    copy_data string [Scene Hierarchy] 40                                                JingleScript::Compiler::CompileConstant
    [0000000E]    call_method [EditorAttribute::ctor(string)] 6                                        JingleScript::Compiler::CompileFunctionCall
    [0000000F]   pop 40                                                                                JingleScript::ValueItem::Pop
    [00000010]   copy_address 0                                                                        
    [00000011]   push 40                                                                               JingleScript::ValueItem::Push
    [00000012]    copy_data string [Entity Properties] 40                                              JingleScript::Compiler::CompileConstant
    [00000013]    call_method [EditorAttribute::ctor(string)] 6                                        JingleScript::Compiler::CompileFunctionCall
    [00000014]   pop 40                                                                                JingleScript::ValueItem::Pop
    [00000015]   copy_address 0                                                                        
    [00000016]   call_method [Property::ctor()] 1                                                      JingleScript::Compiler::CompileFunctionCall
    [00000017]   copy_address 0                                                                        
    [00000018]   call_method [Property::ctor()] 1                                                      JingleScript::Compiler::CompileFunctionCall
    [00000019]   copy_address 0                                                                        
    [0000001A]   call_method [Property::ctor()] 1                                                      JingleScript::Compiler::CompileFunctionCall
    [0000001B]   copy_address 0                                                                        
    [0000001C]   push 40                                                                               JingleScript::ValueItem::Push
    [0000001D]    copy_data string [MaterialImage] 40                                                  JingleScript::Compiler::CompileConstant
    [0000001E]    call_method [ArrayProperty::ctor(string)] 6                                          JingleScript::Compiler::CompileFunctionCall
    [0000001F]   pop 40                                                                                JingleScript::ValueItem::Pop
    [00000020]   copy_address 0                                                                        
    [00000021]   call_method [Property::ctor()] 1                                                      JingleScript::Compiler::CompileFunctionCall
    [00000022]   copy_address 0                                                                        
    [00000023]   call_method [Property::ctor()] 1                                                      JingleScript::Compiler::CompileFunctionCall
    [00000024]   copy_address 0                                                                        
    [00000025]   call_method [Property::ctor()] 1                                                      JingleScript::Compiler::CompileFunctionCall
    [00000026]   copy_address 0                                                                        
    [00000027]   push 40                                                                               JingleScript::ValueItem::Push
    [00000028]    copy_data string [Component] 40                                                      JingleScript::Compiler::CompileConstant
    [00000029]    call_method [ArrayProperty::ctor(string)] 6                                          JingleScript::Compiler::CompileFunctionCall
    [0000002A]   pop 40                                                                                JingleScript::ValueItem::Pop
    [0000002B]   copy_address 0                                                                        
    [0000002C]   push 40                                                                               JingleScript::ValueItem::Push
    [0000002D]    copy_data string [Entity] 40                                                         JingleScript::Compiler::CompileConstant
    [0000002E]    push 40                                                                              JingleScript::ValueItem::Push
    [0000002F]     copy_data string [InitChild] 40                                                     JingleScript::Compiler::CompileConstant
    [00000030]     call_method [ArrayProperty::ctor(string, string)] 7                                 JingleScript::Compiler::CompileFunctionCall
    [00000031]    pop 40                                                                               JingleScript::ValueItem::Pop
    [00000032]   pop 40                                                                                JingleScript::ValueItem::Pop
    [00000033]   copy_address 0                                                                        
    [00000034]   call_method [Property::ctor()] 1                                                      JingleScript::Compiler::CompileFunctionCall
    [00000035]   copy_address 0                                                                        
    [00000036]   call_method [Property::ctor()] 1                                                      JingleScript::Compiler::CompileFunctionCall
    [00000037]   copy_address 0                                                                        
    [00000038]   call_method [Native::ctor()] 1                                                        JingleScript::Compiler::CompileFunctionCall
    [00000039]   copy_address 0                                                                        
    [0000003A]   call_method [Native::ctor()] 1                                                        JingleScript::Compiler::CompileFunctionCall
    [0000003B]   copy_address 0                                                                        
    [0000003C]   call_method [Native::ctor()] 1                                                        JingleScript::Compiler::CompileFunctionCall
    [0000003D]   copy_address 0                                                                        
    [0000003E]   call_method [Native::ctor()] 1                                                        JingleScript::Compiler::CompileFunctionCall
    [0000003F]   copy_address 0                                                                        
    [00000040]   call_method [Native::ctor()] 1                                                        JingleScript::Compiler::CompileFunctionCall
    [00000041]   copy_address 0                                                                        
    [00000042]   call_method [Native::ctor()] 1                                                        JingleScript::Compiler::CompileFunctionCall
    [00000043]   copy_address 0                                                                        
    [00000044]   call_method [Native::ctor()] 1                                                        JingleScript::Compiler::CompileFunctionCall
    [00000045]   copy_address 0                                                                        
    [00000046]   call_method [Native::ctor()] 1                                                        JingleScript::Compiler::CompileFunctionCall
    [00000047]   copy_address 0                                                                        
    [00000048]   call_method [Native::ctor()] 1                                                        JingleScript::Compiler::CompileFunctionCall
    [00000049]   copy_address 0                                                                        
    [0000004A]   call_method [Native::ctor()] 1                                                        JingleScript::Compiler::CompileFunctionCall
    [0000004B]   copy_address 0                                                                        
    [0000004C]   call_method [Native::ctor()] 1                                                        JingleScript::Compiler::CompileFunctionCall
    [0000004D]   copy_address 0                                                                        
    [0000004E]   call_method [Native::ctor()] 1                                                        JingleScript::Compiler::CompileFunctionCall
    [0000004F]   copy_address 0                                                                        
    [00000050]   call_method [Native::ctor()] 1                                                        JingleScript::Compiler::CompileFunctionCall
    [00000051]   copy_address 0                                                                        
    [00000052]   call_method [Native::ctor()] 1                                                        JingleScript::Compiler::CompileFunctionCall
    [00000053]   copy_address 0                                                                        
    [00000054]   call_method [Native::ctor()] 1                                                        JingleScript::Compiler::CompileFunctionCall
    [00000055]   copy_address 0                                                                        
    [00000056]   call_method [Native::ctor()] 1                                                        JingleScript::Compiler::CompileFunctionCall
    [00000057]   copy_address 0                                                                        
    [00000058]   call_method [Native::ctor()] 1                                                        JingleScript::Compiler::CompileFunctionCall
    [00000059]   copy_address 0                                                                        
    [0000005A]   call_method [Native::ctor()] 1                                                        JingleScript::Compiler::CompileFunctionCall
    [0000005B]   copy_address 0                                                                        
    [0000005C]   call_method [Native::ctor()] 1                                                        JingleScript::Compiler::CompileFunctionCall
    [0000005D]   copy_address 0                                                                        
    [0000005E]   call_method [Native::ctor()] 1                                                        JingleScript::Compiler::CompileFunctionCall
    [0000005F]   copy_address 0                                                                        
    [00000060]   call_method [Native::ctor()] 1                                                        JingleScript::Compiler::CompileFunctionCall
    [00000061]   copy_address 0                                                                        
    [00000062]   call_method [Native::ctor()] 1                                                        JingleScript::Compiler::CompileFunctionCall
    [00000063]   copy_address 0                                                                        
    [00000064]   call_method [Native::ctor()] 1                                                        JingleScript::Compiler::CompileFunctionCall
    [00000065]   copy_address 0                                                                        
    [00000066]   call_method [Native::ctor()] 1                                                        JingleScript::Compiler::CompileFunctionCall
    [00000067]   copy_address 0                                                                        
    [00000068]   call_method [Native::ctor()] 1                                                        JingleScript::Compiler::CompileFunctionCall
    [00000069]   copy_address 0                                                                        
    [0000006A]   call_method [Native::ctor()] 1                                                        JingleScript::Compiler::CompileFunctionCall
    [0000006B]   copy_address 0                                                                        
    [0000006C]   call_method [Native::ctor()] 1                                                        JingleScript::Compiler::CompileFunctionCall
    [0000006D]   copy_address 0                                                                        
    [0000006E]   call_method [Native::ctor()] 1                                                        JingleScript::Compiler::CompileFunctionCall
    [0000006F]  pop 8                                                                                  JingleScript::ValueItem::Pop
  }
}

struct bool extends Object {
   bool value

  bool bool::operator>=(bool) (Native)

  bool::dtor() (Native)

  bool bool::operator==(bool) (Native)

  void bool::operator=(bool) (Native)

  bool::ctor() (Native)

  bool bool::operator>=(uint64_t) (Native)

  bool bool::operator>(bool) (Native)

  bool bool::operator<(bool) (Native)

  bool bool::operator!=(int) (Native)

  bool bool::operator<=(bool) (Native)

  bool bool::operator!=(bool) (Native)

  void bool::operator=(byte) (Native)

  bool bool::operator>(byte) (Native)

  bool bool::operator>=(byte) (Native)

  bool bool::operator>(float) (Native)

  bool bool::operator<(byte) (Native)

  bool bool::operator<=(byte) (Native)

  bool bool::operator==(byte) (Native)

  bool bool::operator<=(int) (Native)

  bool bool::operator!=(byte) (Native)

  bool bool::operator==(uint64_t) (Native)

  void bool::operator=(double) (Native)

  bool bool::operator>(double) (Native)

  bool bool::operator>=(double) (Native)

  bool bool::operator<(double) (Native)

  string bool::ToString() (Native)

  bool bool::operator==(float) (Native)

  bool bool::operator<=(double) (Native)

  bool bool::operator==(double) (Native)

  bool bool::operator<(uint64_t) (Native)

  bool bool::operator!=(double) (Native)

  bool bool::operator<=(uint64_t) (Native)

  void bool::operator=(float) (Native)

  bool bool::operator>=(float) (Native)

  bool bool::operator>=(int) (Native)

  bool bool::operator<(float) (Native)

  bool bool::operator<=(float) (Native)

  bool bool::operator!=(float) (Native)

  void bool::operator=(int) (Native)

  bool bool::operator>(int) (Native)

  bool bool::operator<(int) (Native)

  bool bool::operator>(uint64_t) (Native)

  bool bool::operator==(int) (Native)

  void bool::operator=(uint64_t) (Native)

  bool bool::operator!=(uint64_t) (Native)

  string bool::operator+(string) (Native)
}

struct byte extends Object {
   byte value

  bool byte::operator>=(bool) (Native)

  byte::dtor() (Native)

  byte byte::operator-(double) (Native)

  bool byte::operator==(bool) (Native)

  byte::ctor() (Native)

  bool byte::operator<(bool) (Native)

  void byte::operator=(bool) (Native)

  bool byte::operator>=(uint64_t) (Native)

  byte byte::operator+(double) (Native)

  bool byte::operator>(bool) (Native)

  bool byte::operator!=(int) (Native)

  byte byte::operator-(float) (Native)

  bool byte::operator<=(bool) (Native)

  bool byte::operator!=(bool) (Native)

  byte byte::operator*(byte) (Native)

  byte byte::operator/(byte) (Native)

  bool byte::operator<=(float) (Native)

  byte byte::operator+(byte) (Native)

  byte byte::operator/(float) (Native)

  byte byte::operator-(byte) (Native)

  bool byte::operator<=(byte) (Native)

  byte byte::operator%(byte) (Native)

  bool byte::operator>=(double) (Native)

  void byte::operator=(byte) (Native)

  bool byte::operator>(byte) (Native)

  bool byte::operator>=(byte) (Native)

  bool byte::operator>(float) (Native)

  bool byte::operator<(byte) (Native)

  bool byte::operator==(byte) (Native)

  bool byte::operator<=(int) (Native)

  byte byte::operator%(int) (Native)

  bool byte::operator!=(byte) (Native)

  byte byte::operator*(double) (Native)

  byte byte::operator/(double) (Native)

  void byte::operator=(double) (Native)

  bool byte::operator>(double) (Native)

  bool byte::operator<(double) (Native)

  bool byte::operator==(float) (Native)

  bool byte::operator<=(double) (Native)

  bool byte::operator==(double) (Native)

  bool byte::operator<(uint64_t) (Native)

  bool byte::operator!=(double) (Native)

  byte byte::operator*(float) (Native)

  byte byte::operator+(float) (Native)

  void byte::operator=(float) (Native)

  byte byte::operator*(uint64_t) (Native)

  bool byte::operator>=(float) (Native)

  bool byte::operator>=(int) (Native)

  bool byte::operator<(float) (Native)

  byte byte::operator+(int) (Native)

  bool byte::operator!=(float) (Native)

  byte byte::operator*(int) (Native)

  byte byte::operator%(uint64_t) (Native)

  byte byte::operator/(int) (Native)

  byte byte::operator+(uint64_t) (Native)

  byte byte::operator-(int) (Native)

  void byte::operator=(int) (Native)

  bool byte::operator>(int) (Native)

  bool byte::operator<(int) (Native)

  bool byte::operator>(uint64_t) (Native)

  bool byte::operator==(int) (Native)

  byte byte::operator/(uint64_t) (Native)

  byte byte::operator-(uint64_t) (Native)

  void byte::operator=(uint64_t) (Native)

  bool byte::operator<=(uint64_t) (Native)

  bool byte::operator==(uint64_t) (Native)

  bool byte::operator!=(uint64_t) (Native)

  string byte::operator+(string) (Native)

  string byte::ToString() (Native)
}

struct double extends Object {
   double value

  double double::operator+(int) (Native)

  bool double::operator>=(bool) (Native)

  double::dtor() (Native)

  bool double::operator==(bool) (Native)

  double::ctor() (Native)

  void double::operator=(bool) (Native)

  double double::operator-(byte) (Native)

  bool double::operator>=(uint64_t) (Native)

  double double::operator/(float) (Native)

  bool double::operator>(bool) (Native)

  double double::operator-(float) (Native)

  bool double::operator<(bool) (Native)

  bool double::operator!=(int) (Native)

  void double::operator=(double) (Native)

  bool double::operator<=(bool) (Native)

  bool double::operator!=(bool) (Native)

  double double::operator*(byte) (Native)

  bool double::operator==(float) (Native)

  bool double::operator<=(double) (Native)

  double double::operator/(byte) (Native)

  bool double::operator>=(int) (Native)

  bool double::operator<(float) (Native)

  double double::operator+(byte) (Native)

  void double::operator=(byte) (Native)

  bool double::operator>(byte) (Native)

  bool double::operator>=(byte) (Native)

  bool double::operator>(float) (Native)

  bool double::operator<(byte) (Native)

  double double::operator-(uint64_t) (Native)

  bool double::operator<=(byte) (Native)

  double double::operator+(float) (Native)

  bool double::operator==(byte) (Native)

  bool double::operator<=(int) (Native)

  bool double::operator!=(byte) (Native)

  double double::operator*(double) (Native)

  double double::operator/(double) (Native)

  void double::operator=(uint64_t) (Native)

  string double::operator+(string) (Native)

  double double::operator+(double) (Native)

  double double::operator-(double) (Native)

  bool double::operator>(double) (Native)

  bool double::operator>=(double) (Native)

  bool double::operator<(double) (Native)

  bool double::operator==(double) (Native)

  bool double::operator<(uint64_t) (Native)

  double double::operator/(int) (Native)

  bool double::operator!=(double) (Native)

  bool double::operator!=(uint64_t) (Native)

  double double::operator*(float) (Native)

  double double::operator*(uint64_t) (Native)

  void double::operator=(float) (Native)

  bool double::operator>=(float) (Native)

  bool double::operator<=(float) (Native)

  bool double::operator!=(float) (Native)

  double double::operator*(int) (Native)

  double double::operator+(uint64_t) (Native)

  double double::operator-(int) (Native)

  void double::operator=(int) (Native)

  bool double::operator>(int) (Native)

  bool double::operator<(int) (Native)

  bool double::operator>(uint64_t) (Native)

  bool double::operator==(int) (Native)

  double double::operator/(uint64_t) (Native)

  bool double::operator<=(uint64_t) (Native)

  bool double::operator==(uint64_t) (Native)

  string double::ToString() (Native)
}

struct float extends Object {
   float value

  bool float::operator>=(bool) (Native)

  float::dtor() (Native)

  void float::operator=(double) (Native)

  bool float::operator==(bool) (Native)

  void float::operator=(bool) (Native)

  float::ctor() (Native)

  bool float::operator>=(uint64_t) (Native)

  bool float::operator>(bool) (Native)

  float float::operator/(double) (Native)

  bool float::operator<(bool) (Native)

  bool float::operator!=(int) (Native)

  bool float::operator<=(bool) (Native)

  float float::operator/(uint64_t) (Native)

  bool float::operator!=(bool) (Native)

  float float::operator*(byte) (Native)

  float float::operator/(byte) (Native)

  bool float::operator<=(byte) (Native)

  float float::operator+(byte) (Native)

  float float::operator/(float) (Native)

  float float::operator-(byte) (Native)

  void float::operator=(byte) (Native)

  bool float::operator>(byte) (Native)

  float float::operator*(uint64_t) (Native)

  bool float::operator>=(byte) (Native)

  bool float::operator>(float) (Native)

  bool float::operator<(byte) (Native)

  bool float::operator==(byte) (Native)

  bool float::operator<=(int) (Native)

  float float::operator+(int) (Native)

  bool float::operator!=(byte) (Native)

  float float::operator*(double) (Native)

  bool float::operator==(float) (Native)

  bool float::operator<=(double) (Native)

  float float::operator+(double) (Native)

  float float::operator-(double) (Native)

  void float::operator=(int) (Native)

  bool float::operator>(double) (Native)

  bool float::operator>=(double) (Native)

  bool float::operator<(double) (Native)

  void float::operator=(uint64_t) (Native)

  float float::operator*(int) (Native)

  bool float::operator==(double) (Native)

  bool float::operator<(uint64_t) (Native)

  bool float::operator!=(double) (Native)

  float float::operator*(float) (Native)

  bool float::operator<=(float) (Native)

  float float::operator+(float) (Native)

  float float::operator-(float) (Native)

  void float::operator=(float) (Native)

  bool float::operator>=(float) (Native)

  bool float::operator>=(int) (Native)

  bool float::operator<(float) (Native)

  bool float::operator!=(float) (Native)

  float float::operator/(int) (Native)

  bool float::operator<=(uint64_t) (Native)

  float float::operator+(uint64_t) (Native)

  float float::operator-(int) (Native)

  bool float::operator>(int) (Native)

  bool float::operator<(int) (Native)

  bool float::operator>(uint64_t) (Native)

  bool float::operator==(int) (Native)

  float float::operator-(uint64_t) (Native)

  bool float::operator==(uint64_t) (Native)

  bool float::operator!=(uint64_t) (Native)

  string float::operator+(string) (Native)

  string float::ToString() (Native)
}

struct int extends Object {
   int value

  bool int::operator>=(bool) (Native)

  int::dtor() (Native)

  bool int::operator==(bool) (Native)

  int::ctor() (Native)

  bool int::operator>=(uint64_t) (Native)

  void int::operator=(float) (Native)

  bool int::operator>(bool) (Native)

  void int::operator=(bool) (Native)

  bool int::operator<(bool) (Native)

  bool int::operator!=(int) (Native)

  bool int::operator<=(bool) (Native)

  bool int::operator!=(bool) (Native)

  int int::operator*(byte) (Native)

  int int::operator/(byte) (Native)

  string int::ToString() (Native)

  bool int::operator>=(double) (Native)

  int int::operator+(byte) (Native)

  int int::operator/(float) (Native)

  int int::operator-(byte) (Native)

  int int::operator%(byte) (Native)

  bool int::operator==(float) (Native)

  bool int::operator<=(double) (Native)

  void int::operator=(byte) (Native)

  bool int::operator>(byte) (Native)

  bool int::operator>=(byte) (Native)

  bool int::operator>(float) (Native)

  bool int::operator<(byte) (Native)

  bool int::operator<=(byte) (Native)

  bool int::operator==(byte) (Native)

  bool int::operator<=(int) (Native)

  bool int::operator!=(byte) (Native)

  bool int::operator>=(int) (Native)

  bool int::operator<(float) (Native)

  int int::operator*(double) (Native)

  int int::operator/(double) (Native)

  int int::operator+(double) (Native)

  int int::operator-(double) (Native)

  int int::operator%(uint64_t) (Native)

  int int::operator/(int) (Native)

  void int::operator=(double) (Native)

  bool int::operator>(double) (Native)

  int int::operator%(int) (Native)

  bool int::operator<(double) (Native)

  bool int::operator==(double) (Native)

  bool int::operator<(uint64_t) (Native)

  bool int::operator!=(double) (Native)

  void int::operator=(int) (Native)

  void int::operator=(uint64_t) (Native)

  int int::operator*(float) (Native)

  int int::operator+(float) (Native)

  int int::operator-(float) (Native)

  int int::operator/(uint64_t) (Native)

  bool int::operator>=(float) (Native)

  bool int::operator<=(float) (Native)

  bool int::operator!=(float) (Native)

  int int::operator*(uint64_t) (Native)

  int int::operator*(int) (Native)

  int int::operator+(int) (Native)

  int int::operator+(uint64_t) (Native)

  int int::operator-(int) (Native)

  bool int::operator>(int) (Native)

  bool int::operator<(int) (Native)

  bool int::operator>(uint64_t) (Native)

  bool int::operator==(int) (Native)

  int int::operator-(uint64_t) (Native)

  bool int::operator<=(uint64_t) (Native)

  bool int::operator==(uint64_t) (Native)

  bool int::operator!=(uint64_t) (Native)

  string int::operator+(string) (Native)
}

struct uint64_t {
   uint64_t value

  bool uint64_t::operator>=(bool) (Native)

  uint64_t::dtor() (Native)

  uint64_t uint64_t::operator*(int) (Native)

  bool uint64_t::operator==(bool) (Native)

  uint64_t::ctor() (Native)

  bool uint64_t::operator==(byte) (Native)

  void uint64_t::operator=(bool) (Native)

  bool uint64_t::operator>=(uint64_t) (Native)

  bool uint64_t::operator>(bool) (Native)

  bool uint64_t::operator<(bool) (Native)

  uint64_t uint64_t::operator+(double) (Native)

  bool uint64_t::operator!=(int) (Native)

  bool uint64_t::operator<=(bool) (Native)

  bool uint64_t::operator!=(bool) (Native)

  bool uint64_t::operator>(uint64_t) (Native)

  bool uint64_t::operator==(int) (Native)

  uint64_t uint64_t::operator*(byte) (Native)

  uint64_t uint64_t::operator/(byte) (Native)

  uint64_t uint64_t::operator+(byte) (Native)

  uint64_t uint64_t::operator/(float) (Native)

  bool uint64_t::operator>=(double) (Native)

  uint64_t uint64_t::operator-(byte) (Native)

  uint64_t uint64_t::operator%(byte) (Native)

  void uint64_t::operator=(byte) (Native)

  bool uint64_t::operator>(byte) (Native)

  bool uint64_t::operator>=(byte) (Native)

  bool uint64_t::operator>(float) (Native)

  bool uint64_t::operator<(byte) (Native)

  bool uint64_t::operator<=(byte) (Native)

  bool uint64_t::operator<=(int) (Native)

  bool uint64_t::operator!=(byte) (Native)

  void uint64_t::operator=(float) (Native)

  uint64_t uint64_t::operator*(double) (Native)

  uint64_t uint64_t::operator/(double) (Native)

  uint64_t uint64_t::operator-(double) (Native)

  uint64_t uint64_t::operator%(int) (Native)

  void uint64_t::operator=(double) (Native)

  bool uint64_t::operator>(double) (Native)

  uint64_t uint64_t::operator%(uint64_t) (Native)

  uint64_t uint64_t::operator/(int) (Native)

  bool uint64_t::operator<(double) (Native)

  bool uint64_t::operator==(float) (Native)

  bool uint64_t::operator<=(double) (Native)

  bool uint64_t::operator==(double) (Native)

  bool uint64_t::operator<(uint64_t) (Native)

  uint64_t uint64_t::operator*(float) (Native)

  bool uint64_t::operator!=(double) (Native)

  uint64_t uint64_t::operator+(float) (Native)

  uint64_t uint64_t::operator-(float) (Native)

  void uint64_t::operator=(int) (Native)

  bool uint64_t::operator>=(float) (Native)

  bool uint64_t::operator>=(int) (Native)

  bool uint64_t::operator<(float) (Native)

  bool uint64_t::operator<=(float) (Native)

  bool uint64_t::operator!=(float) (Native)

  uint64_t uint64_t::operator+(int) (Native)

  uint64_t uint64_t::operator+(uint64_t) (Native)

  uint64_t uint64_t::operator-(int) (Native)

  bool uint64_t::operator>(int) (Native)

  bool uint64_t::operator<(int) (Native)

  void uint64_t::operator=(uint64_t) (Native)

  uint64_t uint64_t::operator*(uint64_t) (Native)

  uint64_t uint64_t::operator/(uint64_t) (Native)

  uint64_t uint64_t::operator-(uint64_t) (Native)

  bool uint64_t::operator<=(uint64_t) (Native)

  bool uint64_t::operator==(uint64_t) (Native)

  bool uint64_t::operator!=(uint64_t) (Native)

  string uint64_t::operator+(string) (Native)

  string uint64_t::ToString() (Native)
}

struct null extends Object {

  null::dtor() (Native)

  null::ctor() (Native)

  bool null::operator==(Object) (Native)

  bool null::operator!=(Object) (Native)
}

class Managed extends Object {

  Managed::dtor() (Native)

  Managed::ctor() (Native)
}

class Attribute extends Object {

  Attribute::dtor() (Native)

  Attribute::ctor() (Native)
}

struct Array extends Object {

  void Array::Insert(Object) (Native)

  Array::dtor() (Native)
}

class Viewport extends Managed {

  Viewport::dtor() (Native)

  Viewport::ctor() (Native)
}

struct Vertex {

  Vertex::dtor() (Native)
}

class Texture extends Managed {

  Texture::dtor() (Native)

  Texture::ctor() (Native)
}

class Shader extends Asset {

  Shader::dtor() (Native)

  Shader::ctor() (Native)
}

class Asset extends Object {

  Asset::dtor() (Native)

  Asset::ctor() (Native)
}

class Renderer extends Module {

  Renderer::dtor() (Native)

  Renderer::ctor() (Native)
}

class Mesh extends Asset {

  Mesh::dtor() (Native)

  Mesh::ctor() (Native)
}

class MaterialImage extends Object {
   Image File
   string Name

  MaterialImage::dtor() (Native)

  MaterialImage::ctor() (Native)
}

struct MaterialImageArray extends Array {

  MaterialImageArray::dtor() (Native)

  MaterialImageArray::ctor() (Native)

  void MaterialImageArray::Insert(MaterialImage) (Native)
}

class Material extends ConfigAsset {
   Shader Shader
   MaterialImageArray Images

  Material::dtor() (Native)

  Material::ctor() (Native)
}

class ConfigAsset extends Asset {

  ConfigAsset::dtor() (Native)

  ConfigAsset::ctor() (Native)
}

class Image extends Asset {

  Image::dtor() (Native)

  Image::ctor() (Native)
}

class Framebuffer extends Managed {

  Framebuffer::dtor() (Native)

  Framebuffer::ctor() (Native)
}

class PropertyProperty extends PropertyBase {

  PropertyProperty::dtor() (Native)

  PropertyProperty::ctor(Type, Property, uint64_t) (Native)
}

class PropertyBase extends Object {

  PropertyBase::dtor() (Native)
}

class Type extends Object {

  bool Type::IsInherited(Type) (Native)
}

class Property extends Attribute {

  Property::dtor() (Native)

  Property::ctor() (Native)

  Property::ctor(string) (Native)
}

class PropertyObject extends PropertyBase {

  PropertyObject::ctor(Type, Property, uint64_t) (Native)

  PropertyObject::dtor() (Native)

  PropertyObject::ctor() (Native)
}

class PropertyItem extends PropertyBase {

  PropertyItem::ctor(Type, Property, uint64_t) (Native)

  PropertyItem::dtor() (Native)
}

class PropertyConfig extends PropertyBase {

  PropertyConfig::dtor() (Native)

  PropertyConfig::ctor(Type, Property, uint64_t) (Native)
}

class PropertyAsset extends PropertyBase {

  PropertyAsset::dtor() (Native)

  PropertyAsset::ctor(Type, Property, uint64_t) (Native)
}

class PropertyArray extends PropertyBase {

  PropertyArray::dtor() (Native)

  PropertyArray::ctor(Type, Property, uint64_t) (Native)
}

class ArrayProperty extends Property {

  ArrayProperty::dtor() (Native)

  ArrayProperty::ctor(string) (Native)

  ArrayProperty::ctor(string, string) (Native)
}

class WndWindow extends Window {

  WndWindow::dtor() (Native)

  WndWindow::ctor() (Native)
}

class Window extends Module {

  Window::dtor() (Native)
}

class BindingModule extends Module {

  BindingModule::dtor() (Native)

  BindingModule::ctor() (Native)
}

struct ComponentArray extends Array {

  void ComponentArray::Insert(Component) (Native)

  ComponentArray::dtor() (Native)

  ComponentArray::ctor() (Native)
}

class Component extends Object {

  void Component::OnCreate() (Native)

  Component::dtor() (Native)

  Component::ctor() (Native)

  Component::ctor(Entity) (Native)

  void Component::OnDestroy() (Native)

  void Component::OnTick(double) (Native)
}

class Entity extends Object {
   ComponentArray Components
   EntityArray Children

  void Entity::OnCreate() (Native)

  Entity::dtor() (Native)

  void Entity::RemoveChild(Entity) (Native)

  Entity::ctor() (Native)

  void Entity::AddChild(Entity) (Native)

  void Entity::OnDestroy() (Native)

  void Entity::InitChild(Entity) (Native)

  void Entity::OnTick(double) (Native)

  Entity Entity::GetParent() (Native)
}

struct EntityArray extends Array {

  EntityArray::dtor() (Native)

  EntityArray::ctor() (Native)

  void EntityArray::Insert(Entity) (Native)
}

class MeshComponent extends Component {
   Mesh Model
   Material MaterialOverride

  MeshComponent::dtor() (Native)

  MeshComponent::ctor(Entity) (Native)

  MeshComponent::ctor() (Native)
}

class SceneHierarchyPanel extends EditorPanelBase {

  SceneHierarchyPanel::dtor() (Native)

  SceneHierarchyPanel::ctor() (Native)
}

class EditorPanelBase extends Object {

  EditorPanelBase::dtor() (Native)

  EditorPanelBase::ctor() (Native)

  void EditorPanelBase::Close() (Native)

  void EditorPanelBase::OnEndRender(double) (Native)

  void EditorPanelBase::OnBeginRender(double) (Native)

  void EditorPanelBase::OnRender(double) (Native)

  EditorModule EditorPanelBase::GetEditor() (Native)
}

class EditorModule extends Module {

  EditorModule::dtor() (Native)

  EditorModule::ctor() (Native)
}

class EntityPropertiesPanel extends EditorPanelBase {

  EntityPropertiesPanel::dtor() (Native)

  EntityPropertiesPanel::ctor() (Native)
}

class EditorViewport extends Viewport {

  EditorViewport::dtor() (Native)

  EditorViewport::ctor() (Native)
}

class EditorViewportPanel extends EditorPanelBase {

  EditorViewportPanel::dtor() (Native)

  EditorViewportPanel::ctor() (Native)
}

class EditorAttribute extends Attribute {
   string m_Title

  EditorAttribute::dtor() (Native)

  EditorAttribute::ctor(string) (Native)
}

class Application extends Object {
   int FPS

  Application::dtor() (Native)

  Application::ctor() (Native)

  Entity Application::GetScene() (Native)

  void Application::OnUpdate(double) {
  }
}

class ConfigValue extends Config {

  ConfigValue::dtor() (Native)

  ConfigValue::ctor() (Native)
}

class Config extends Object {

  Config::dtor() (Native)

  Config::ctor() (Native)
}

class ConfigSection extends Config {

  ConfigSection::dtor() (Native)

  ConfigSection::ctor() (Native)
}

class ConfigArray extends Object {

  ConfigArray::dtor() (Native)

  ConfigArray::ctor() (Native)
}

class AssetModule extends Module {

  AssetModule::dtor() (Native)

  AssetModule::ctor() (Native)
}

class Camera extends Entity {
   double MovementSpeed
   double MovementBoostModifier
   double MouseSpeed
}

class Native extends Attribute {

  Native::ctor() {
    [00000000]  push 8                                                                                 JingleScript::ValueItem::Push
    [00000001]   copy 8 16 [this] 8                                                                    JingleScript::Compiler::CompileFunctionCall
    [00000002]   call_exact [Attribute::ctor()]                                                        JingleScript::Compiler::CompileFunctionCall
    [00000003]  pop 8                                                                                  JingleScript::ValueItem::Pop
  }
}

class DebugType extends Object {
}

class ScriptTestPanel extends EditorPanelBase {

  void ScriptTestPanel::OnRender(double) {
    [00000000]  push 8                                                                                 JingleScript::ValueItem::Push
    [00000001]   push 8                                                                                JingleScript::ValueItem::PushAfter
    [00000002]    push 8                                                                               JingleScript::ValueItem::PushAt
    [00000003]     call_function [Application GetApplication()]                                        JingleScript::Compiler::CompileFunctionCall
    [00000004]     copy 8 8 24 [app]                                                                   JingleScript::Compiler::CompileVariableScope
    [00000005]    pop 8                                                                                JingleScript::ValueItem::Pop
    [00000006]    push 40                                                                              JingleScript::ValueItem::Push
    [00000007]     copy_data string [This is jingle script] 40                                         JingleScript::Compiler::CompileConstant
    [00000008]     call_function [void ImGui_Text(string)]                                             JingleScript::Compiler::CompileFunctionCall
    [00000009]    pop 40                                                                               JingleScript::ValueItem::Pop
    [0000000A]    push 40                                                                              JingleScript::ValueItem::Push
    [0000000B]     copy_data string [DeltaTime: ] 40                                                   JingleScript::Compiler::CompileConstant
    [0000000C]     push 8                                                                              JingleScript::ValueItem::PushAfter
    [0000000D]      copy 8 72 [DeltaTime] 8                                                            JingleScript::Compiler::CompileValue
    [0000000E]      call_exact [string string::operator+(double)]                                      JingleScript::HandleArithmeticOperator
    [0000000F]     pop 8                                                                               JingleScript::ValueItem::Pop
    [00000010]     call_function [void ImGui_Text(string)]                                             JingleScript::Compiler::CompileFunctionCall
    [00000011]    pop 40                                                                               JingleScript::ValueItem::Pop
    [00000012]    push 40                                                                              JingleScript::ValueItem::Push
    [00000013]     copy_data string [FPS: ] 40                                                         JingleScript::Compiler::CompileConstant
    [00000014]     push 8                                                                              JingleScript::ValueItem::PushAfter
    [00000015]      copy 8 64 [app] 8                                                                  JingleScript::Compiler::CompileValue
    [00000016]      copy_variable_from_object 8 32 [FPS] 8                                             JingleScript::Compiler::CompileValue
    [00000017]      resize -4                                                                          JingleScript::ValueItem::Resize
    [00000018]      call_exact [string string::operator+(int)]                                         JingleScript::HandleArithmeticOperator
    [00000019]     pop 4                                                                               JingleScript::ValueItem::Pop
    [0000001A]     call_function [void ImGui_Text(string)]                                             JingleScript::Compiler::CompileFunctionCall
    [0000001B]    pop 40                                                                               JingleScript::ValueItem::Pop
    [0000001C]    push 1                                                                               JingleScript::ValueItem::Push
    [0000001D]     push 1                                                                              JingleScript::ValueItem::PushAfter
    [0000001E]      push 1                                                                             JingleScript::ValueItem::PushAt
    [0000001F]       call_function [bool ImGui_WantCaptureKeyboard()]                                  JingleScript::Compiler::CompileFunctionCall
    [00000020]       copy 1 1 3 [b1]                                                                   JingleScript::Compiler::CompileVariableScope
    [00000021]       destructor [bool]                                                                 JingleScript::ValueItem::Pop
    [00000022]      pop 1                                                                              JingleScript::ValueItem::Pop
    [00000023]      push 1                                                                             JingleScript::ValueItem::Push
    [00000024]       push 1                                                                            JingleScript::ValueItem::PushAfter
    [00000025]        push 1                                                                           JingleScript::ValueItem::PushAt
    [00000026]         call_function [bool ImGui_WantCaptureMouse()]                                   JingleScript::Compiler::CompileFunctionCall
    [00000027]         copy 1 1 3 [b2]                                                                 JingleScript::Compiler::CompileVariableScope
    [00000028]         destructor [bool]                                                               JingleScript::ValueItem::Pop
    [00000029]        pop 1                                                                            JingleScript::ValueItem::Pop
    [0000002A]        push 40                                                                          JingleScript::ValueItem::Push
    [0000002B]         copy_data string [WantCaptureKeyboard: ] 40                                     JingleScript::Compiler::CompileConstant
    [0000002C]         push 1                                                                          JingleScript::ValueItem::PushAfter
    [0000002D]          copy 1 45 [b1] 1                                                               JingleScript::Compiler::CompileValue
    [0000002E]          call_exact [string string::operator+(bool)]                                    JingleScript::HandleArithmeticOperator
    [0000002F]         pop 1                                                                           JingleScript::ValueItem::Pop
    [00000030]         call_function [void ImGui_Text(string)]                                         JingleScript::Compiler::CompileFunctionCall
    [00000031]        pop 40                                                                           JingleScript::ValueItem::Pop
    [00000032]        push 40                                                                          JingleScript::ValueItem::Push
    [00000033]         copy_data string [WantCaptureMouse: ] 40                                        JingleScript::Compiler::CompileConstant
    [00000034]         push 1                                                                          JingleScript::ValueItem::PushAfter
    [00000035]          copy 1 43 [b2] 1                                                               JingleScript::Compiler::CompileValue
    [00000036]          call_exact [string string::operator+(bool)]                                    JingleScript::HandleArithmeticOperator
    [00000037]         pop 1                                                                           JingleScript::ValueItem::Pop
    [00000038]         call_function [void ImGui_Text(string)]                                         JingleScript::Compiler::CompileFunctionCall
    [00000039]        pop 40                                                                           JingleScript::ValueItem::Pop
    [0000003A]        destructor [bool]                                                                JingleScript::ValueItem::Pop
    [0000003B]       pop 1                                                                             JingleScript::ValueItem::Pop
    [0000003C]       destructor [bool]                                                                 JingleScript::ValueItem::Pop
    [0000003D]      pop 1                                                                              JingleScript::ValueItem::Pop
    [0000003E]      destructor [bool]                                                                  JingleScript::ValueItem::Pop
    [0000003F]     pop 1                                                                               JingleScript::ValueItem::Pop
    [00000040]     destructor [bool]                                                                   JingleScript::ValueItem::Pop
    [00000041]    pop 1                                                                                JingleScript::ValueItem::Pop
    [00000042]   pop 8                                                                                 JingleScript::ValueItem::Pop
    [00000043]  pop 8                                                                                  JingleScript::ValueItem::Pop
  }
}

class Debug extends Object {
}
